{"remainingRequest":"/Users/jameshsu/Documents/Itunes Explorer/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jameshsu/Documents/Itunes Explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jameshsu/Documents/Itunes Explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jameshsu/Documents/Itunes Explorer/src/components/SettingsModal.vue?vue&type=template&id=aa27896c&scoped=true&","dependencies":[{"path":"/Users/jameshsu/Documents/Itunes Explorer/src/components/SettingsModal.vue","mtime":1564723662505},{"path":"/Users/jameshsu/Documents/Itunes Explorer/node_modules/cache-loader/dist/cjs.js","mtime":1564287323436},{"path":"/Users/jameshsu/Documents/Itunes Explorer/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jameshsu/Documents/Itunes Explorer/node_modules/cache-loader/dist/cjs.js","mtime":1564287323436},{"path":"/Users/jameshsu/Documents/Itunes Explorer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"v-flex\", [\n    _c(\"div\", [\n      _c(\"div\", { staticClass: \"settings-menu\", attrs: { xs8: \"\" } }, [\n        _c(\"div\", { staticClass: \"header\" }, [\n          _vm._v(\"\\n\\t\\tiTunes Explorer Settings\\n\\t\\t\")\n        ]),\n        _c(\"div\", { staticClass: \"setting-row\" }, [\n          _c(\"div\", { staticClass: \"settings\" }, [\n            _vm._v(\"\\n\\t\\t\\tNum. of Results\")\n          ]),\n          _c(\n            \"select\",\n            {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.settings[\"numResults\"],\n                  expression: \"settings['numResults']\"\n                }\n              ],\n              staticClass: \"settings setting-select\",\n              on: {\n                change: function($event) {\n                  var $$selectedVal = Array.prototype.filter\n                    .call($event.target.options, function(o) {\n                      return o.selected\n                    })\n                    .map(function(o) {\n                      var val = \"_value\" in o ? o._value : o.value\n                      return val\n                    })\n                  _vm.$set(\n                    _vm.settings,\n                    \"numResults\",\n                    $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n                  )\n                }\n              }\n            },\n            [\n              _c(\"option\", { attrs: { disabled: \"\", value: \"\" } }, [\n                _vm._v(\"Please select one\")\n              ]),\n              _c(\"option\", [_vm._v(\"50\")]),\n              _c(\"option\", [_vm._v(\"100\")]),\n              _c(\"option\", [_vm._v(\"200\")])\n            ]\n          )\n        ]),\n        _c(\"div\", { staticClass: \"setting-row\" }, [\n          _c(\"div\", { staticClass: \"settings\" }, [_vm._v(\"\\n\\t\\t\\tCountry\")]),\n          _c(\n            \"select\",\n            {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.settings[\"country\"],\n                  expression: \"settings['country']\"\n                }\n              ],\n              staticClass: \"settings setting-select\",\n              on: {\n                change: function($event) {\n                  var $$selectedVal = Array.prototype.filter\n                    .call($event.target.options, function(o) {\n                      return o.selected\n                    })\n                    .map(function(o) {\n                      var val = \"_value\" in o ? o._value : o.value\n                      return val\n                    })\n                  _vm.$set(\n                    _vm.settings,\n                    \"country\",\n                    $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n                  )\n                }\n              }\n            },\n            [\n              _c(\"option\", { attrs: { disabled: \"\", value: \"\" } }, [\n                _vm._v(\"Please select one\")\n              ]),\n              _vm._l(_vm.countries, function(country, index) {\n                return _c(\"option\", { domProps: { value: index } }, [\n                  _vm._v(_vm._s(country))\n                ])\n              })\n            ],\n            2\n          )\n        ]),\n        _c(\"div\", { staticClass: \"setting-row\" }, [\n          _c(\"div\", { staticClass: \"settings\" }, [\n            _vm._v(\"\\n\\t\\t\\tButton Color\")\n          ]),\n          _c(\n            \"select\",\n            {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.settings[\"btnColor\"],\n                  expression: \"settings['btnColor']\"\n                }\n              ],\n              staticClass: \"settings setting-select\",\n              on: {\n                change: function($event) {\n                  var $$selectedVal = Array.prototype.filter\n                    .call($event.target.options, function(o) {\n                      return o.selected\n                    })\n                    .map(function(o) {\n                      var val = \"_value\" in o ? o._value : o.value\n                      return val\n                    })\n                  _vm.$set(\n                    _vm.settings,\n                    \"btnColor\",\n                    $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n                  )\n                }\n              }\n            },\n            [\n              _c(\"option\", { attrs: { disabled: \"\", value: \"\" } }, [\n                _vm._v(\"Please select one\")\n              ]),\n              _vm._l(_vm.btnColor, function(color, index) {\n                return _c(\"option\", { domProps: { value: color } }, [\n                  _c(\"span\", { class: color }, [_vm._v(_vm._s(color))])\n                ])\n              })\n            ],\n            2\n          )\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}